<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="voice2text.mapper.BrokerMessageLogMapper">

    <resultMap id="BaseResultMap" type="voice2text.entity.BrokerMessageLog">
        <id column="message_id" jdbcType="VARCHAR" property="messageId" />
        <result column="message" jdbcType="VARCHAR" property="message" />
        <result column="try_count" jdbcType="VARCHAR" property="tryCount" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="next_retry" jdbcType="SMALLINT" property="nextRetry" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="try_count" jdbcType="TIMESTAMP" property="tryCount" />
    </resultMap>

        <insert id="insert" parameterType="voice2text.entity.BrokerMessageLog">
            INSERT INTO mq_broker_message_log  (message_id,message,status,next_retry, create_time, update_time)
            VALUES(#{messageId},#{message},#{status},#{nextRetry},#{createTime},#{updateTime});
        </insert>


   <!-- sysdate()  当前时间-->
        <select id="query4StatusAndTimeoutMessage" resultMap="BaseResultMap">
              <![CDATA[
              select message_id, message, try_count, status, next_retry, create_time, update_time
                  from mq_broker_message_log bml
                  where status = '0'
                  and next_retry <= sysdate()
              ]]>
        </select>

        <update id="update4ReSend" >
        update mq_broker_message_log bml
        set bml.try_count = bml.try_count + 1,
          bml.update_time = #{updateTime, jdbcType=TIMESTAMP}
        where bml.message_id = #{messageId,jdbcType=VARCHAR}
      </update>

        <update id="changeBrokerMessageLogStatus" >
        update mq_broker_message_log bml
        set bml.status = #{status,jdbcType=VARCHAR},
              bml.update_time = #{updateTime, jdbcType=TIMESTAMP}
        where bml.message_id = #{messageId,jdbcType=VARCHAR}
      </update>

</mapper>